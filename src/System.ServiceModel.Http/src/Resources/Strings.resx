<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CertificateUnsupportedForHttpTransportCredentialOnly" xml:space="preserve">
    <value>Certificate-based client authentication is not supported in TransportCredentialOnly security mode. Select the Transport security mode.</value>
  </data>
  <data name="ChannelTypeNotSupported" xml:space="preserve">
    <value>The specified channel type {0} is not supported by this channel manager.</value>
  </data>
  <data name="MaxReceivedMessageSizeExceeded" xml:space="preserve">
    <value>The maximum message size quota for incoming messages ({0}) has been exceeded. To increase the quota, use the MaxReceivedMessageSize property on the appropriate binding element.</value>
  </data>
  <data name="EnvelopeVersionUnknown" xml:space="preserve">
    <value>Unrecognized envelope version: {0}.</value>
  </data>
  <data name="ManualAddressingRequiresAddressedMessages" xml:space="preserve">
    <value>Manual addressing is enabled on this factory, so all messages sent must be pre-addressed.</value>
  </data>
  <data name="WaitForMessageTimedOut" xml:space="preserve">
    <value>WaitForMessage timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="CloseTimedOut" xml:space="preserve">
    <value>Close timed out after {0}.  Increase the timeout value passed to the call to Close or increase the CloseTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="HttpProxyRequiresSingleAuthScheme" xml:space="preserve">
    <value>The '{0}' authentication scheme has been specified for the proxy on the HTTP factory. However, the factory only supports specification of exactly one authentication scheme. Valid authentication schemes are Digest, Negotiate, NTLM, Basic, or Anonymous.</value>
  </data>
  <data name="UseDefaultWebProxyCantBeUsedWithExplicitProxyAddress" xml:space="preserve">
    <value>You cannot specify an explicit Proxy Address as well as UseDefaultWebProxy=true in your HTTP Transport Binding Element.</value>
  </data>
  <data name="ProxyImpersonationLevelMismatch" xml:space="preserve">
    <value>The HTTP proxy authentication credential specified an impersonation level restriction ({0}) that is stricter than the restriction for target server authentication ({1}).</value>
  </data>
  <data name="ProxyAuthenticationLevelMismatch" xml:space="preserve">
    <value>The HTTP proxy authentication credential specified an mutual authentication requirement ({0}) that is stricter than the requirement for target server authentication ({1}).</value>
  </data>
  <data name="HttpIfModifiedSinceParseError" xml:space="preserve">
    <value>The value specified, '{0}', for the If-Modified-Since header does not parse into a valid date. Check the property value and ensure that it is of the proper format.</value>
  </data>
  <data name="HttpSoapActionMismatch" xml:space="preserve">
    <value>The SOAP action specified on the message, '{0}', does not match the action specified on the HttpRequestMessageProperty, '{1}'.</value>
  </data>
  <data name="HttpSoapActionMismatchContentType" xml:space="preserve">
    <value>The SOAP action specified on the message, '{0}', does not match the action specified in the content-type of the HttpRequestMessageProperty, '{1}'.</value>
  </data>
  <data name="HttpContentTypeFormatException" xml:space="preserve">
    <value>An error ({0}) occurred while parsing the content type of the HTTP request. The content type was: {1}.</value>
  </data>
  <data name="HttpServerTooBusy" xml:space="preserve">
    <value>The HTTP service located at {0} is unavailable.  This could be because the service is too busy or because no endpoint was found listening at the specified address. Please ensure that the address is correct and try accessing the service again later.</value>
  </data>
  <data name="HttpRequestTimedOut" xml:space="preserve">
    <value>The HTTP request to '{0}' has exceeded the allotted timeout of {1}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="HttpResponseTimedOut" xml:space="preserve">
    <value>The HTTP request to '{0}' has exceeded the allotted timeout of {1} while reading the response. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="HttpReceiveFailure" xml:space="preserve">
    <value>An error occurred while receiving the HTTP response to {0}. This could be due to the service endpoint binding not using the HTTP protocol. This could also be due to an HTTP request context being aborted by the server (possibly due to the service shutting down). See server logs for more details.</value>
  </data>
  <data name="HttpAuthDoesNotSupportRequestStreaming" xml:space="preserve">
    <value>HTTP request streaming cannot be used in conjunction with HTTP authentication.  Either disable request streaming or specify anonymous HTTP authentication.</value>
  </data>
  <data name="EndpointNotFound" xml:space="preserve">
    <value>There was no endpoint listening at {0} that could accept the message. This is often caused by an incorrect address or SOAP action. See InnerException, if present, for more details.</value>
  </data>
  <data name="MaxReceivedMessageSizeMustBeInIntegerRange" xml:space="preserve">
    <value>This factory buffers messages, so the message sizes must be in the range of an integer value.</value>
  </data>
  <data name="MaxBufferSizeMustMatchMaxReceivedMessageSize" xml:space="preserve">
    <value>For TransferMode.Buffered, MaxReceivedMessageSize and MaxBufferSize must be the same value.</value>
  </data>
  <data name="MaxBufferSizeMustNotExceedMaxReceivedMessageSize" xml:space="preserve">
    <value>MaxBufferSize must not exceed MaxReceivedMessageSize.</value>
  </data>
  <data name="UnexpectedHttpResponseCode" xml:space="preserve">
    <value>The remote server returned an unexpected response: ({0}) {1}.</value>
  </data>
  <data name="HttpContentLengthIncorrect" xml:space="preserve">
    <value>The number of bytes available is inconsistent with the HTTP Content-Length header.  There may have been a network error or the client may be sending invalid requests.</value>
  </data>
  <data name="MissingContentType" xml:space="preserve">
    <value>The receiver returned an error indicating that the content type was missing on the request to {0}.  See the inner exception for more information.</value>
  </data>
  <data name="HttpAddressingNoneHeaderOnWire" xml:space="preserve">
    <value>The incoming message contains a SOAP header representing the WS-Addressing '{0}', yet the HTTP transport is configured with AddressingVersion.None.  As a result, the message is being dropped.  If this is not desired, then update your HTTP binding to support a different AddressingVersion.</value>
  </data>
  <data name="MessageXmlProtocolError" xml:space="preserve">
    <value>There is a problem with the XML that was received from the network. See inner exception for more details.</value>
  </data>
  <data name="HttpContentTypeHeaderRequired" xml:space="preserve">
    <value>An HTTP Content-Type header is required for SOAP messaging and none was found.</value>
  </data>
  <data name="ResponseContentTypeMismatch" xml:space="preserve">
    <value>The content type {0} of the response message does not match the content type of the binding ({1}). If using a custom encoder, be sure that the IsContentTypeSupported method is implemented properly. The first {2} bytes of the response were: '{3}'.</value>
  </data>
  <data name="HttpToMustEqualVia" xml:space="preserve">
    <value>The binding specified requires that the to and via URIs must match because the Addressing Version is set to None. The to URI specified was '{0}'. The via URI specified was '{1}'.</value>
  </data>
  <data name="FramingContentTypeMismatch" xml:space="preserve">
    <value>Content Type {0} was not supported by service {1}.  The client and service bindings may be mismatched.</value>
  </data>
  <data name="HttpRequiresSingleAuthScheme" xml:space="preserve">
    <value>The '{0}' authentication scheme has been specified on the HTTP factory. However, the factory only supports specification of exactly one authentication scheme. Valid authentication schemes are Digest, Negotiate, NTLM, Basic, IntegratedWindowsAuthentication, or Anonymous.</value>
  </data>
  <data name="HttpAuthSchemeCannotBeNone" xml:space="preserve">
    <value>The value specified for the AuthenticationScheme property on the HttpTransportBindingElement ('{0}') is not allowed when building a ChannelFactory. If you used a standard binding, ensure the ClientCredentialType is not set to HttpClientCredentialType.InheritedFromHost, a value which is invalid on a client. If you set the value to '{0}' directly on the HttpTransportBindingElement, please set it to Digest, Negotiate, NTLM, Basic, IntegratedWindowsAuthentication, or Anonymous.</value>
  </data>
  <data name="HttpAuthorizationFailed" xml:space="preserve">
    <value>The HTTP request is unauthorized with client authentication scheme '{0}'. The authentication header received from the server was '{1}'.</value>
  </data>
  <data name="HttpAuthorizationForbidden" xml:space="preserve">
    <value>The HTTP request was forbidden with client authentication scheme '{0}'.</value>
  </data>
  <data name="HttpsServerCertThumbprintMismatch" xml:space="preserve">
    <value>The server certificate with name '{0}' failed identity verification because its thumbprint ('{1}') does not match the one specified in the endpoint identity ('{2}').  As a result, the current HTTPS request has failed.  Please update the endpoint identity used on the client or the certificate used by the server.</value>
  </data>
  <data name="TrustFailure" xml:space="preserve">
    <value>Could not establish trust relationship for the SSL/TLS secure channel with authority '{0}'.</value>
  </data>
  <data name="CredentialDisallowsNtlm" xml:space="preserve">
    <value>The NTLM authentication scheme was specified, but the target credential does not allow NTLM.</value>
  </data>
  <data name="ValueMustBeNonNegative" xml:space="preserve">
    <value>The value of this argument must be non-negative.</value>
  </data>
  <data name="ValueMustBePositive" xml:space="preserve">
    <value>The value of this argument must be positive.</value>
  </data>
  <data name="ValueMustBeInRange" xml:space="preserve">
    <value>The value of this argument must fall within the range {0} to {1}.</value>
  </data>
  <data name="ExtendedProtectionNotSupported" xml:space="preserve">
    <value>Extended protection is not supported on this platform.  Please install the appropriate patch or change the ExtendedProtectionPolicy on the Binding or BindingElement to a value with a PolicyEnforcement value of "Never" or "WhenSupported".</value>
  </data>
  <data name="HttpClientCredentialTypeInvalid" xml:space="preserve">
    <value>ClientCredentialType '{0}' can only be used on the server side, not the client side. Please use one of the following values instead 'None, Basic, Client, Digest, Ntlm, Windows'.</value>
  </data>
  <data name="UnsupportedSecuritySetting" xml:space="preserve">
    <value>The value '{1}' is not supported in this context for the binding security property '{0}'.</value>
  </data>
  <data name="HttpMaxPendingAcceptsTooLargeError" xml:space="preserve">
    <value>The value of MaxPendingAccepts should not be larger than {0}.</value>
  </data>
  <data name="SFxTimeoutOutOfRange0" xml:space="preserve">
    <value>Timeout must be greater than or equal to TimeSpan.Zero. To disable timeout, specify TimeSpan.MaxValue.</value>
  </data>
  <data name="SFxTimeoutOutOfRangeTooBig" xml:space="preserve">
    <value>Timeouts larger than Int32.MaxValue TotalMilliseconds (approximately 24 days) cannot be honored. To disable timeout, specify TimeSpan.MaxValue.</value>
  </data>
  <data name="CouldnTCreateChannelForChannelType2" xml:space="preserve">
    <value>Channel type '{1}' was requested, but Binding '{0}' doesn't support it or isn't configured properly to support it.</value>
  </data>
  <data name="InputTypeListEmptyError" xml:space="preserve">
    <value>The input handler list cannot be empty.</value>
  </data>
  <data name="DelegatingHandlerArrayHasNonNullInnerHandler" xml:space="preserve">
    <value>The '{0}' list is invalid because the property '{1}' of '{2}' is not null.</value>
  </data>
  <data name="DelegatingHandlerArrayFromFuncContainsNullItem" xml:space="preserve">
    <value>The '{0}' list created by the Func '{1}' is invalid because it contains one or more null items.</value>
  </data>
  <data name="HttpMessageHandlerTypeNotSupported" xml:space="preserve">
    <value>Invalid type: '{0}'. It must inherit from base type '{1}', cannot be abstract, and must expose a public default constructor.</value>
  </data>
  <data name="HttpPipelineNotSupportedOnClientSide" xml:space="preserve">
    <value>The property '{0}' is not supported when building a ChannelFactory. The property value must be null when calling BuildChannelFactory.</value>
  </data>
  <data name="WebSocketInvalidProtocolInvalidCharInProtocolString" xml:space="preserve">
    <value>The subprotocol '{0}' is invalid because it contains the invalid character '{1}'.</value>
  </data>
  <data name="WebSocketInvalidProtocolContainsMultipleSubProtocolString" xml:space="preserve">
    <value>The value specified ('{0}') contains more than one subprotocol which is not supported.</value>
  </data>
  <data name="WebSocketInvalidProtocolEmptySubprotocolString" xml:space="preserve">
    <value>Empty string is not a valid subprotocol value. Please use "null" to specify no value.</value>
  </data>
  <data name="WebSocketUnexpectedCloseMessageError" xml:space="preserve">
    <value>Unexpected WebSocket close message received when receiving a message.</value>
  </data>
  <data name="WebSocketStreamWriteCalledAfterEOMSent" xml:space="preserve">
    <value>Cannot write to the stream because the end of the stream marker was already written.</value>
  </data>
  <data name="WebSocketCannotCreateRequestClientChannelWithCertainWebSocketTransportUsage" xml:space="preserve">
    <value>HttpChannelFactory cannot create the channel with shape '{0}' when the {1} of {2} was set as '{3}'.</value>
  </data>
  <data name="ClientWebSocketFactory_CreateWebSocketFailed" xml:space="preserve">
    <value>An error occurred when creating the WebSocket with the factory of type '{0}'. See the inner exception for details.</value>
  </data>
  <data name="ClientWebSocketFactory_InvalidWebSocket" xml:space="preserve">
    <value>WebSocket creation failed. The '{0}' returned a WebSocket that is either null or not opened.</value>
  </data>
  <data name="ClientWebSocketFactory_InvalidSubProtocol" xml:space="preserve">
    <value>The WebSocket returned by the factory of type '{0}' has the SubProtocol '{1}' that doesn't match the requested SubProtocol value '{2}'.</value>
  </data>
  <data name="WebSocketSendTimedOut" xml:space="preserve">
    <value>The Send operation timed out after '{0}'. Increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="WebSocketReceiveTimedOut" xml:space="preserve">
    <value>The Receive operation timed out after '{0}'. For duplex sessionful channels, the receive timeout is also the idle timeout for the channel, so consider setting a suitably large value for the ReceiveTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="WebSocketOperationTimedOut" xml:space="preserve">
    <value>The '{0}' operation timed out after '{1}'. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="WebSocketVersionMismatchFromServer" xml:space="preserve">
    <value>The server didn't accept the connection request. It is possible that the WebSocket protocol version on your client doesn't match the one on the server('{0}').</value>
  </data>
  <data name="WebSocketSubProtocolMismatchFromServer" xml:space="preserve">
    <value>The server didn't accept the connection request. It is possible that the WebSocket subprotocol sent by your client is not supported by the server. Protocol(s) supported by the server are '{0}'.</value>
  </data>
  <data name="CopyHttpHeaderFailed" xml:space="preserve">
    <value>Failed to copy the HTTP header '{0}' with value '{1}' to '{2}'.</value>
  </data>
  <data name="UserNameCannotBeEmpty" xml:space="preserve">
    <value>The username cannot be empty.</value>
  </data>
  <data name="ClientCredentialTypeMustBeSpecifiedForMixedMode" xml:space="preserve">
    <value>ClientCredentialType.None is not valid for the TransportWithMessageCredential security mode. Specify a message credential type or use a different security mode.</value>
  </data>
  <data name="BasicHttpMessageSecurityRequiresCertificate" xml:space="preserve">
    <value>BasicHttp binding requires that BasicHttpBinding.Security.Message.ClientCredentialType be equivalent to the BasicHttpMessageCredentialType.Certificate credential type for secure messages. Select Transport or TransportWithMessageCredential security for UserName credentials.</value>
  </data>
  <data name="SecureConversationRequiredByReliableSession" xml:space="preserve">
    <value>Cannot establish a reliable session without secure conversation. Enable secure conversation.</value>
  </data>
  <data name="HttpsExplicitIdentity" xml:space="preserve">
    <value>The HTTPS channel factory does not support explicit specification of an identity in the EndpointAddress unless the authentication scheme is NTLM or Negotiate.</value>
  </data>
  <data name="HttpsIdentityMultipleCerts" xml:space="preserve">
    <value>The endpoint identity specified when creating the HTTPS channel to '{0}' contains multiple server certificates.  However, the HTTPS transport only supports the specification of a single server certificate.  In order to create an HTTPS channel, please specify no more than one server certificate in the endpoint identity.</value>
  </data>
  <data name="OnlyDefaultSpnServiceSupported" xml:space="preserve">
    <value>Only HOST and HTTP service principal names are supported .</value>
  </data>
  <data name="WebSocketTransportError" xml:space="preserve">
    <value>A WebSocket error occurred.</value>
  </data>
  <data name="WebSocketUpgradeFailedError" xml:space="preserve">
    <value>WebSocket upgrade request failed. Received response status code '{0} ({1})', expected: '{2} ({3})'.</value>
  </data>
  <data name="WebSocketUpgradeFailedHeaderMissingError" xml:space="preserve">
    <value>WebSocket upgrade request failed. The header '{0}' is missing in the response.</value>
  </data>
  <data name="WebSocketUpgradeFailedWrongHeaderError" xml:space="preserve">
    <value>WebSocket upgrade request failed. The value of header '{0}' is '{1}'. The expected value is '{2}'.</value>
  </data>
  <data name="WebSocketInvalidProtocolNotInClientList" xml:space="preserve">
    <value>The subprotocol '{0}' was not requested by the client. The client requested the following subprotocol(s): '{1}'.</value>
  </data>
</root>