# Windows legs
parameters:
  # Required: value to specify if the job is comming from an official build to run extra steps and sign binaries.
  #   Default: false
  isOfficialBuild: false

jobs:

- template: wcf-base.yml
  parameters:
    isOfficialBuild: ${{ parameters.isOfficialBuild }}
    targetOS: Linux
    jobs:

    # Legs with Helix testing
    - job: LinuxTest
      displayName: Linux
      strategy:
        matrix:
          # PR CI build LEGS with HELIX Testing
          ${{ if eq(parameters.isOfficialBuild, 'false') }}:
            Debug:
              _BuildConfig: Debug
              _unitTests: false
              _integrationTests: false
              _sign: false
              _pack: false
              _publish: false
              _helixQueues: $(linuxDefaultQueues)
              _dockerContainer: ubuntu_1604_Powershell_62
              _useIISHostedTestArgs: true
              _WcfPRServiceId: 3
              _UpdateService: true

            Release:
              _BuildConfig: Release
              _unitTests: false
              _integrationTests: false
              _sign: false
              _pack: false
              _publish: false
              _helixQueues: $(linuxDefaultQueues)
              _dockerContainer: ubuntu_1604_Powershell_62
              _useIISHostedTestArgs: true
              _WcfPRServiceId: 4
              _UpdateService: true
          
          # Official build LEGS with HELIX Testing
          ${{ if eq(parameters.isOfficialBuild, 'true') }}:
            Debug:
              _BuildConfig: Debug
              _sign: false
              _unitTests: false
              _integrationTests: false
              _pack: false
              _publish: true
              _helixQueues: $(linuxDefaultQueues)
              _dockerContainer: ubuntu_1604_Powershell_62
              _useIISHostedTestArgs: true

            Release:
              _BuildConfig: Release
              _sign: false
              _unitTests: false
              _integrationTests: false
              _pack: false
              _publish: true
              _helixQueues: $(linuxDefaultQueues)
              _dockerContainer: ubuntu_1604_Powershell_62
              _useIISHostedTestArgs: true

      pool:
        ${{ if eq(parameters.isOfficialBuild, 'true') }}:
          name: NetCoreInternal-Pool
          queue: buildpool.ubuntu.1604.amd64
        ${{ if eq(parameters.isOfficialBuild, 'false') }}:
          name: NetCorePublic-Pool
          queue: buildpool.ubuntu.1604.amd64.open
      
      container: $[ variables['_dockerContainer'] ]
      submitToHelix: true
      buildExtraArguments: ''

      variables:
        - ${{ if eq(parameters.isOfficialBuild, 'false') }}:
          #- linuxDefaultQueues: Centos.7.Amd64.Open+RedHat.7.Amd64.Open+Debian.8.Amd64.Open+Ubuntu.1604.Amd64.Open+Ubuntu.1804.Amd64.Open+OpenSuse.42.Amd64.Open+Fedora.28.Amd64.Open
          - linuxDefaultQueues: Centos.7.Amd64.Open

        - ${{ if eq(parameters.isOfficialBuild, 'true') }}:
          #- linuxDefaultQueues: Centos.7.Amd64+RedHat.7.Amd64+Debian.8.Amd64+Debian.9.Amd64+Ubuntu.1604.Amd64+Ubuntu.1804.Amd64+Ubuntu.1810.Amd64+OpenSuse.42.Amd64+SLES.12.Amd64+SLES.15.Amd64
          - linuxDefaultQueues: Centos.7.Amd64+SLES.12.Amd64+SLES.15.Amd64

        - _xUnitUnitTestProjects:
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Duplex\tests\System.ServiceModel.Duplex.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Http\tests\System.ServiceModel.Http.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.NetTcp\tests\System.ServiceModel.NetTcp.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Primitives\tests\System.ServiceModel.Primitives.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Security\tests\System.ServiceModel.Security.Tests.csproj;

        - _xUnitScenarioTestProjects:
            $(BUILD.SOURCESDIRECTORY)\src\svcutilcore\tests\dotnet-svcutil.xmlserializer.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\Custom\Binding.Custom.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\Http\Binding.Http.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\Tcp\Binding.Tcp.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\WS\TransportWithMessageCredentialSecurity\Binding.WS.TransportWithMessageCredentialSecurity.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\ChannelLayer\Client.ChannelLayer.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\ClientBase\Client.ClientBase.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\ExpectedExceptions\Client.ExpectedExceptions.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\TypedClient\Client.TypedClient.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Data\Contract.Data.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Fault\Contract.Fault.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Message\Contract.Message.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Service\Contract.Service.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\XmlSerializer\Contract.XmlSerializer.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Encoding\Encoders\Encoding.Encoders.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Encoding\MessageVersion\Encoding.MessageVersion.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Extensibility\MessageEncoder\Extensibility.MessageEncoder.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Extensibility\MessageInterceptor\Extensibility.MessageInterceptor.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Extensibility\WebSockets\Extensibility.WebSockets.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Infrastructure\Infrastructure.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Security\TransportSecurity\Security.TransportSecurity.IntegrationTests.csproj;

        - _xUnitAllTestProjects:
            $(BUILD.SOURCESDIRECTORY)\src\svcutilcore\tests\dotnet-svcutil.xmlserializer.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Duplex\tests\System.ServiceModel.Duplex.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Http\tests\System.ServiceModel.Http.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.NetTcp\tests\System.ServiceModel.NetTcp.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Primitives\tests\System.ServiceModel.Primitives.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.ServiceModel.Security\tests\System.ServiceModel.Security.Tests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\Custom\Binding.Custom.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\Http\Binding.Http.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\Tcp\Binding.Tcp.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Binding\WS\TransportWithMessageCredentialSecurity\Binding.WS.TransportWithMessageCredentialSecurity.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\ChannelLayer\Client.ChannelLayer.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\ClientBase\Client.ClientBase.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\ExpectedExceptions\Client.ExpectedExceptions.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Client\TypedClient\Client.TypedClient.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Data\Contract.Data.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Fault\Contract.Fault.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Message\Contract.Message.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\Service\Contract.Service.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Contract\XmlSerializer\Contract.XmlSerializer.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Encoding\Encoders\Encoding.Encoders.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Encoding\MessageVersion\Encoding.MessageVersion.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Extensibility\MessageEncoder\Extensibility.MessageEncoder.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Extensibility\MessageInterceptor\Extensibility.MessageInterceptor.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Extensibility\WebSockets\Extensibility.WebSockets.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Infrastructure\Infrastructure.IntegrationTests.csproj;
            $(BUILD.SOURCESDIRECTORY)\src\System.Private.ServiceModel\tests\Scenarios\Security\TransportSecurity\Security.TransportSecurity.IntegrationTests.csproj;
