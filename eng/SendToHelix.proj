<Project Sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="Test">
  <PropertyGroup>
    <Language>msbuild</Language>
  </PropertyGroup>

  <PropertyGroup>
    <HelixAccessToken Condition="'$(_isOfficialBuild)'">$(_helixAccessToken)</HelixAccessToken>
    <WaitForWorkItemCompletion Condition="'!$(_isOfficialBuild)'">true</WaitForWorkItemCompletion>
    <Creator Condition="'!$(_isOfficialBuild)'">dotnet-wcf</Creator>
  </PropertyGroup>

  <PropertyGroup Condition="!$(HelixTargetQueue.StartsWith('Windows'))">
    <HelixPreCommands>$(HelixPreCommands);chmod a+x $HELIX_CORRELATION_PAYLOAD/InstallRootCertificate.sh;sudo -E -n $HELIX_CORRELATION_PAYLOAD/InstallRootCertificate.sh --service-host $(ServiceHost) --cert-file /tmp/wcfrootca.crt</HelixPreCommands>
  </PropertyGroup>

  <ItemGroup>
    <!-- Directory that is zipped up and sent as a correlation payload to Helix -->
    <HelixCorrelationPayload Include="$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\..\src\System.Private.ServiceModel\tools\scripts'))" >
      <PayloadDirectory>%(Identity)</PayloadDirectory>
    </HelixCorrelationPayload>
  </ItemGroup>

  <ItemGroup>
    <XUnitProjects Include="$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\..\src\System.Private.ServiceModel\tests\Scenarios\**\*.IntegrationTests.csproj'))" />
    <XUnitProjects Include="$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\..\src\System.ServiceModel.*\tests\*.Tests.csproj'))" />
    <XUnitProject Include="$(XUnitProjects.Split(';'))" />
  </ItemGroup>
</Project>
