parameters:
  Operation: ''
  wcfPRServiceUri: "http://wcfcoresrv2.westus2.cloudapp.azure.com/PRServiceMaster/pr.ashx"
  wcfPRServiceId: ''

##   Description of 'Set_Operation_PR_or_Branch' steps for Windows or Unix   ##
##   Have to determine if the run was triggered as a PR or CI and then set 'Operation' accordingly.   ##
##   (Windows)If 'Operation' is set to "pr" the inline script will set the environment variable 'branchNameorPrId''ghprbPullId' to the PR ID value parsed from the 'Build.SourceBranch' variable.   ##
##   (Windows)The variable 'branchNameorPrId' is then used by the 'sync-pr' script.
##   (Unix)If 'Operation' is set to "pr" the inline script will set the environment variable 'branchNameorPrId' to the id of the executing PR.   ##
##   (Unix)The variable 'branchNameorPrId' is then passed to the 'sync-pr' script.
##   If 'Operation' is set to 'branch' it will determine the branch being used and set the environment variable 'branchNameorPrId' to it.
##   The variable 'branchNameorPrId' is then passed to the 'sync-pr' script.
steps:
    ##   Platform: Windows   ##
    ##   Task: Get the PR ID or Branch name.   ##
  - script: |
      SETLOCAL EnableDelayedExpansion
      echo Determine if this is a PR or CI triggered build.
      echo If Build.Reason is 'PullRequest' then set 'operation to "pr".
      echo If Build.Reason is NOT 'PullRequest' then set 'operation' to "branch".
      echo Build.Reason is: %BUILD_REASON%

      IF '%BUILD_REASON%'=='PullRequest' (
          set _OPERATION=pr
          echo Operation mode has been set to: !_OPERATION!
          echo ##vso[task.setvariable variable=operation]!_OPERATION!
          goto pr
      ) ELSE (
          set _OPERATION=branch
          echo Operation mode has been set to: !_OPERATION!
          echo ##vso[task.setvariable variable=operation]!_OPERATION!
          goto branch
      )

      :pr
      echo Parse the PR ID from environment variable 'Build.SourceBranch': %BUILD_SOURCEBRANCH%
      set GHPRBPULLID=%BUILD_SOURCEBRANCH:refs/pull/=%
      set GHPRBPULLID=%GHPRBPULLID:/merge=%
      echo The PR ID is: %GHPRBPULLID%
      echo ##vso[task.setvariable variable=branchNameorPrId]%GHPRBPULLID%
      goto done

      :branch
      echo Set the repo branch to be what build.SourceBranchName is: %BUILD_SOURCEBRANCHNAME%
      REM The following vso call sets a variable that is accessible further down in the PowerShell script to Sync the PR Service.
      IF '%BUILD_SOURCEBRANCHNAME%'=='master' (
          echo ##vso[task.setvariable variable=branchNameorPrId]origin/%BUILD_SOURCEBRANCHNAME%
      ) ELSE (
          echo ##vso[task.setvariable variable=branchNameorPrId]origin/release/%BUILD_SOURCEBRANCHNAME%
      )
      goto done

      :done
      exit /b %_EXITCODE%

    displayName: Set_Operation_PR_or_Branch_Windows
    condition: and(always(), eq(variables['Agent.Os'], 'Windows_NT'), eq(variables['_updateService'], 'true'))

    ##   Platform: Unix   ##
    ##   Task: Get the PR ID or Branch name.   ##
  - bash: |
      echo "Determine if this is a PR or CI triggered build."
      echo "If 'Build.Reason' is set to 'PullRequest' then set operation mode to 'pr'."
      echo "If 'Build.Reason' is NOT 'PullRequest' then set operation mode to 'branch'."
      echo "Build.Reason is: $BUILD_REASON"

      if [[ $BUILD_REASON = PullRequest ]]; then
        _OPERATION=pr
        echo "Operation mode has been set to: $_OPERATION"
        echo "##vso[task.setvariable variable=operation]$_OPERATION"
        echo "Parse the PR ID from environment variable 'Build.SourceBranch': $BUILD_SOURCEBRANCH"
        GETPRID=$(echo $BUILD_SOURCEBRANCH| cut -d'/' -f 3)
        echo "The PR ID is: $GETPRID"
        echo "##vso[task.setvariable variable=branchNameorPrId]$GETPRID"
      else
        _OPERATION=branch
        echo "Operation mode has been set to: $_OPERATION"
        echo "##vso[task.setvariable variable=operation]$_OPERATION"
        echo "Set the repo branch to be what build.SourceBranchName is: $BUILD_SOURCEBRANCHNAME"
        if [[ $BUILD_SOURCEBRANCHNAME = master ]]; then
          echo "##vso[task.setvariable variable=branchNameorPrId]origin/$BUILD_SOURCEBRANCHNAME"
        else
          echo "##vso[task.setvariable variable=branchNameorPrId]origin/release/$BUILD_SOURCEBRANCHNAME"
        fi
      fi

    displayName: Set_Operation_PR_or_Branch_Unix
    condition: and(always(), ne(variables['Agent.Os'], 'Windows_NT'), eq(variables['_updateService'], 'true'))

    ##   Platform: Windows   ##
    ##   Task: Sync the Service to the PR.   ##
  - powershell: |
      Write-Host "The WCF Root dir is: $env:Build_SourcesDirectory"
      Write-Host "Variable wcfPRServiceId is set to: $env:WCFPRSERVICEID"
      Write-Host "Variable Operation is set to: $env:operation"
      Write-Host "Variable wcfPRServiceUri is set to: $env:WCFPRSERVICEURI"
      Write-Host "Variable branchNameorPrId is set to: $env:branchNameorPrId"
      invoke-command -Scriptblock { & "$env:Build_SourcesDirectory\src\System.Private.ServiceModel\tools\scripts\sync-pr.cmd "$env:WCFPRSERVICEID $env:operation $env:WCFPRSERVICEURI $env:branchNameorPrId"" }
      $LASTEXITCODE

    displayName: Sync_PRService_Windows
    env:
      WCFPRSERVICEURI: ${{ parameters.wcfPRServiceUri }}
      WCFPRSERVICEID: ${{ parameters.wcfPRServiceId }}
    condition: and(always(), eq(variables['Agent.Os'], 'Windows_NT'), eq(variables['_updateService'], 'true'))

    ##   Platform: Unix   ##
    ##   Task: Sync the Service to the PR.   ##
  - bash: |
      echo "The WCF Root dir is: $BUILD_SOURCESDIRECTORY"
      echo "Variable wcfPRServiceId is set to: $WCFPRSERVICEID"
      echo "Variable Operation is set to: $OPERATION"
      echo "Variable wcfPRServiceUri is set to: $WCFPRSERVICEURI"
      echo "Variable branchNameorPrId is set to: $BRANCHNAMEORPRID"
      "$BUILD_SOURCESDIRECTORY/src/System.Private.ServiceModel/tools/scripts/sync-pr.sh" $WCFPRSERVICEID $OPERATION $WCFPRSERVICEURI $BRANCHNAMEORPRID

    displayName: Sync_PRService_Unix
    env:
      WCFPRSERVICEURI: ${{ parameters.wcfPRServiceUri }}
      WCFPRSERVICEID: ${{ parameters.wcfPRServiceId }}
    condition: and(always(), ne(variables['Agent.Os'], 'Windows_NT'), eq(variables['_updateService'], 'true'))
